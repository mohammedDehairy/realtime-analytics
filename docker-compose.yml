version: '3.8'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_DELETE_TOPIC_ENABLE: "true"

  # postgres:
  #   image: postgres:13
  #   container_name: realtime-analytics-db
  #   environment:
  #     POSTGRES_DB: analytics
  #     POSTGRES_USER: analytics
  #     POSTGRES_PASSWORD: analytics
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    ports:
      - "9091:9091"
    command:
      - '--storage.tsdb.retention.time=30d'
      - '--config.file=/etc/prometheus/prometheus.yml'

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./grafana:/var/lib/grafana

  kafka-consumer:
    build: 
      context: ./realtime-analytics-consumer
      dockerfile: Dockerfile
    container_name: kafka-consumer
    depends_on:
      - kafka
      - prometheus
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      KAFKA_GROUP_ID: realtime-analytics-consumer
      KAFKA_TOPIC: realtime-analytics
      PROMETHEUS_PUSHGATEWAY: prometheus:9091

  realtime-analytics-service:
    build: 
      context: ./realtime-analytics-service
      dockerfile: Dockerfile
    container_name: realtime-analytics-service
    depends_on:
      - kafka
      - prometheus
    ports:
      - "8080:8080"
    environment:
      # DB_HOST: localhost
      # DB_PORT: 5432
      # DB_NAME: postgres
      # DB_USER: postgres
      # DB_PASSWORD: postgres
      KAFKA_TOPIC: "realtime-analytics"
      DEVICE_ID_SECRET_KEY: "DEVICE_ID_SECRET_KEY"
      JWT_SECRET_KEY: "JWT_SECRET_KEY"
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092

volumes:
  prometheus-data: